version: '3.12'

services:
  api:
    build:
      context: .
      args:
        DJANGO_ENV: development
    command: [ "python", "./src/manage.py", "runserver", "0.0.0.0:${SERVER_PORT}" ]
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    volumes:
      - "./:/usr/app"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.2
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 3


  rabbitmq:
    image: rabbitmq:3.6.6
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
  redis:
    image: redis
    ports:
      - "6379:6379"
  worker:
    build:
      context: .
      args:
        DJANGO_ENV: development
    command: ["python", "./src/manage.py",'celery', 'worker', '-A', 'app.app', '-l', 'info']
    environment:
      - BROKER_URL=amqp://admin:mypass@rabbitmq:5672//
      - RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=true
      - DJANGO_SETTINGS_MODULE=config.settings
    volumes:
      - "./:/usr/app"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - redis



volumes:
  postgres_data:
