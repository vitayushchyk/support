version: '3.12'

services:
  api:
    build:
      context: .
      args:
        DJANGO_ENV: development
    command: [ "python", "./manage.py", "runserver", "0.0.0.0:${SERVER_PORT}" ]
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    volumes:
      - "./:/usr/app"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.2
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 3
  broker:
    image: redis
    ports:
      - "6379:6379"
  worker:
    build:
      context: .
      args:
        DJANGO_ENV: development
    command: [ "celery","-A","config","worker","-l","info" ]
    volumes:
      - "./:/usr/app"
    env_file:
      - .env
    depends_on:
      - db
      - broker
  mailing:
    image: mailhog/mailhog:latest
    env_file: ".env"
    ports:
      - "1025:1025"
      - "8025:8025"


volumes:
  postgres_data:
